/*
 * Copyright (C) 2017 Seoul National University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
[
/**
 * A message containing metrics and other server-specific information.
 * Since Server does not have epoch as workers, metrics are collected and
 * sent in a fixed time unit, which is called window.
 */
{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "ServerMetrics",
  "fields":
  [
    // Metrics should not be at the end of fields, since AvroUtils fails to decode the message.
    {"name": "metrics", "type": ["null", "edu.snu.cay.common.metric.avro.Metrics"], "default":null},
    {"name": "windowIndex", "type": "int", "default":0},
    {"name": "numModelBlocks", "type": "int", "default":0},
    {"name": "metricWindowMs", "type": "long", "default":0},
    {"name": "totalPullProcessed", "type": "int", "default":0},
    {"name": "totalPushProcessed", "type": "int", "default":0},
    {"name": "totalPullProcessingTimeSec", "type": "double", "default":0.0},
    {"name": "totalPushProcessingTimeSec", "type": "double", "default":0.0},
    {"name": "totalPullWaitingTimeSec", "type": "double", "default":0.0},
    {"name": "totalPushWaitingTimeSec", "type": "double", "default":0.0},
    {"name": "totalReqWaitingTimeSec", "type": "double", "default":0.0},
    {"name": "hostname", "type": "string", "default": ""}
  ]
},

/**
 * A message containing parameter worker metrics.
 * Parameter worker metrics are collected and sent in worker's mini-batch unit.
 */
{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "ParameterWorkerMetrics",
  "fields":
  [
    // number of threads used for push/pull requests
    {"name": "numThreads", "type": "int", "default": 0},

    // total push time for this mini-batch (seconds) : time between a push request's dequeue and network send
    {"name": "totalPushTimeSec", "type": "double", "default": 0.0},

    // total pull time for this mini-batch (seconds) : time between a pull request's dequeue and client notify
    {"name": "totalPullTimeSec", "type": "double", "default": 0.0},

    // total pull waiting time for this mini-batch (seconds) : time spent in queue for a pull request
    {"name": "totalPullWaitTimeSec", "type": "double", "default": 0.0},

    // total push waiting time for this mini-batch (seconds) : time spent in queue for a push request
    {"name": "totalPushWaitTimeSec", "type": "double", "default": 0.0},

    // total network time for this mini-batch (seconds) : time spent in the network for a pull request/reply transmission
    {"name": "totalNetworkTimeSec", "type": "double", "default": 0.0},

    // number of push requests processed
    {"name": "totalPushCount", "type": "int", "default": 0},

    // number of pull requests processed
    {"name": "totalPullCount", "type": "int", "default": 0},

    // number of pull requests waited/put in queue
    {"name": "totalPullWaitStatCount", "type": "int", "default": 0},

    // number of push requests waited/put in queue
    {"name": "totalPushWaitStatCount", "type": "int", "default": 0},

    // number of pull request/reply pairs processed
    {"name": "totalNetworkStatCount", "type": "int", "default": 0},

    // number of events of sending bytes by push
    {"name": "totalSentBytesStatCount", "type": "int", "default": 0},

    // number of data in bytes sent by push
    {"name": "totalSentBytes", "type": "long", "default": 0},

    // number of events of receiving bytes by pull
    {"name": "totalReceivedBytesStatCount", "type": "int", "default": 0},

    // number of data in bytes received by pull
    {"name": "totalReceivedBytes", "type": "long", "default": 0}
  ]
},

/**
 * A message containing worker-side metrics and other Task-specific information.
 * Mini-batch metrics are used for optimization and all fields are required unless noted otherwise.
 */
{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "WorkerMetrics",
  "fields":
  [
    // Metrics should not be at the end of fields, since AvroUtils fails to decode the message.
    // "metrics" should contain app-specific metrics. (ex. loss, DvT)
    {"name": "metrics", "type": ["null", "edu.snu.cay.common.metric.avro.Metrics"], "default": null},

    // Parameter worker metrics containing pull/push request time split into multiple components (ex. encode time).
    {"name": "parameterWorkerMetrics", "type": ["null", "edu.snu.cay.dolphin.async.metric.avro.ParameterWorkerMetrics"],
     "default":null},

    // number of data processed in unit time
    {"name": "dataProcessingRate", "type": ["null", "double"], "default": null},

    // epoch index
    {"name": "epochIdx", "type": "int", "default": 0},

    // mini-batch index, only used for mini-batch metrics
    {"name": "miniBatchIdx", "type": ["null", "int"], "default": null},

    // number of data blocks used for MemoryStore, only used for epoch metrics
    {"name": "numDataBlocks", "type": ["null", "int"], "default": null},

    // number of data items (mapped to a key in MemoryStore) processed
    {"name": "processedDataItemCount", "type": "int", "default": 0},

    // number of training data instances processed per mini-batch
    {"name": "miniBatchSize", "type": ["null", "int"], "default": null},

    // number of mini-batches for this epoch, only used for epoch metrics
    {"name": "numMiniBatchForEpoch", "type": ["null", "int"], "default": null},

    // total elapsed time for this epoch (seconds)
    {"name": "totalTime", "type": ["null", "double"], "default": null},

    // total computation time for this epoch (seconds), only used for mini-batch metrics
    // required for optimization cost model
    {"name": "totalCompTime", "type": ["null", "double"], "default": null},

    // total push time for this epoch (seconds), only used for mini-batch metrics
    {"name": "totalPushTime", "type": ["null", "double"], "default": null},

    // total pull time for this epoch (seconds), only used for mini-batch metrics
    {"name": "totalPullTime", "type": ["null", "double"], "default": null},

    // average push time per trace/element for this epoch (seconds), only used for mini-batch metrics
    {"name": "avgPushTime", "type": ["null", "double"], "default": null},

    // average pull time per trace/element for this epoch (seconds), only used for mini-batch metrics
    {"name": "avgPullTime", "type": ["null", "double"], "default": null},

    // hostname
    {"name": "hostname", "type": "string", "default": ""}
  ]
},

{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "BatchMetrics",
  "fields":
  [
    // number of data processed in unit time
    {"name": "dataProcessingRate", "type": ["null", "double"], "default": null},

    // epoch index
    {"name": "epochIdx", "type": "int"},

    // mini-batch index
    {"name": "batchIdx", "type": "int"},

    // number of mini-batches for this epoch, only used for epoch metrics
    {"name": "numMiniBatchForEpoch", "type": ["null", "int"], "default": null},

    // a field with type of Metrics should not be at the end of fields, since AvroUtils fails to decode the message.
    // This field consists of custom metrics in the batch (ex. DvT).
    {"name": "batchCustomMetrics", "type": ["null", "edu.snu.cay.common.metric.avro.Metrics"], "default": null},

    // total elapsed time for this batch
    {"name": "batchTimeSec", "type": "double"},

    // total computation time for this batch
    {"name": "batchCompTimeSec", "type": "double"},

    // total push time for this batch
    {"name": "batchPullTimeSec", "type": "double"},

    // total pull time for this batch
    {"name": "batchPushTimeSec", "type": "double"},

    // number of data instances processed in the batch
    {"name": "numBatchDataInstances", "type": "int"}
  ]
},

{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "EpochMetrics",
  "fields":
  [
    // epoch index
    {"name": "epochIdx", "type": "int"},

    // a field with type of Metrics should not be at the end of fields, since AvroUtils fails to decode the message.
    // This field consists of custom metrics in the epoch (ex. Loss, Log-likelihood).
    {"name": "epochCustomMetrics", "type": ["null", "edu.snu.cay.common.metric.avro.Metrics"], "default": null},

    // total elapsed time for this epoch
    {"name": "epochTimeSec", "type": "double"},

    // total computation time for this epoch
    // required for optimization cost model
    {"name": "epochCompTimeSec", "type": "double"},

    // total push time for this epoch
    {"name": "epochPullTimeSec", "type": "double"},

    // total pull time for this epoch
    {"name": "epochPushTimeSec", "type": "double"},

    // number of mini-batches for this epoch
    {"name": "numBatchesForEpoch", "type": "int"},

    // number of data instances processed in the epoch
    {"name": "numEpochDataInstances", "type": "int"}
  ]
},

{
  "namespace": "edu.snu.cay.dolphin.async.metric.avro",
  "type": "record",
  "name": "DolphinWorkerMetrics",
  "fields":
  [
    {"name": "type", "type": {"type": "enum", "name": "WorkerMetricsType",
      "symbols": ["BatchMetrics", "EpochMetrics"]}},
    {"name": "batchMetrics", "type": ["null", "BatchMetrics"], "default": null},
    {"name": "epochMetrics", "type": ["null", "EpochMetrics"], "default": null}
  ]
}
]
