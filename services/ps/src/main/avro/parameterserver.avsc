/*
 * Copyright (C) 2015 Seoul National University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
[
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "PushMsg",
  "fields":
  [
    {"name": "key", "type": "bytes"},
    {"name": "preValue", "type": "bytes"}
  ]
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "PullMsg",
  "fields":
  [
    {"name": "key", "type": "bytes"}
  ]
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "PullReplyMsg",
  "fields":
  [
    {"name": "key", "type": "bytes"},
    {"name": "value", "type": "bytes"}
  ]
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "PushRejectMsg",
  "fields":
  [
    {"name": "key", "type": "bytes"},
    {"name": "preValue", "type": "bytes"}
  ]
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "PullRejectMsg",
  "fields":
  [
    {"name": "key", "type": "bytes"}
  ]
},

/**
 * This message is sent from ParameterWorker to the PS Driver to register itself.
 * Only DynamicParameterServer uses this message to retrieve the routing table determined by the EM.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "WorkerRegisterMsg",
  "fields":[]
},

/**
 * This record encapsulates the id mapping in the Elastic Memory.
 */
 {
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "IdMapping",
  "fields": [
    {"name": "memoryStoreId", "type": "int"},
    {"name": "blockIds", "type": {"type": "array", "items": "int"}},
    {"name": "endpointId", "type": "string"}
  ]
},

/**
 * This message is sent from the PS Driver to answer requests
 * from ParameterWorkers for the routing table.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "WorkerRegisterReplyMsg",
  "fields":
  [
    {"name": "idMappings", "type": {"type": "array", "items": "IdMapping"}}
  ]
},

/**
 * This message is sent from the PS driver to ParameterWorkers
 * to update their own routing tables for resolving PS servers.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "RoutingTableUpdateMsg",
  "fields":
  [
    {"name": "oldOwnerId", "type": "int"},
    {"name": "newOwnerId", "type": "int"},
    {"name": "newEvalId", "type": "string"},
    {"name": "blockIds", "type": {"type": "array", "items": "int"}}
  ]
},

/**
 * This message is sent from ParameterWorker to the PS Driver to deregister itself.
 * Only DynamicParameterServer uses this message.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "WorkerDeregisterMsg",
  "fields":[]
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "AvroPSMsg",
  "fields":
  [
    {"name": "type",
     "type":
       {"type": "enum",
        "name": "Type",
        "symbols": ["PushMsg", "PullMsg", "PullReplyMsg", "PushRejectMsg", "PullRejectMsg",
         "WorkerRegisterMsg", "WorkerRegisterReplyMsg", "RoutingTableUpdateMsg", "WorkerDeregisterMsg"]}},
    {"name": "pushMsg", "type": ["null", "PushMsg"], "default": null},
    {"name": "pullMsg", "type": ["null", "PullMsg"], "default": null},
    {"name": "pullReplyMsg", "type": ["null", "PullReplyMsg"], "default": null},
    {"name": "pushRejectMsg", "type": ["null", "PushRejectMsg"], "default": null},
    {"name": "pullRejectMsg", "type": ["null", "PullRejectMsg"], "default": null},
    {"name": "workerRegisterMsg", "type": ["null", "WorkerRegisterMsg"], "default": null},
    {"name": "workerRegisterReplyMsg", "type": ["null", "WorkerRegisterReplyMsg"], "default": null},
    {"name": "routingTableUpdateMsg", "type": ["null", "RoutingTableUpdateMsg"], "default": null},
    {"name": "workerDeregisterMsg", "type": ["null", "WorkerDeregisterMsg"], "default": null}
  ]
},

/**
 * A message containing metrics and other server-specific information.
 * Since Server does not have iteration as workers, metrics are collected and
 * sent in a fixed time unit, which is called window.
 */
{
  "namespace": "edu.snu.cay.services.ps.metric.avro",
  "type": "record",
  "name": "ServerMetricsMsg",
  "fields":
  [
    // Metrics should not be at the end of fields, since AvroUtils fails to decode the message.
    {"name": "metrics", "type": "edu.snu.cay.common.metric.avro.Metrics"},
    {"name": "windowIndex", "type": "int"},
    {"name": "numPartitionBlocks", "type": "int"}
  ]
},

/**
 * This message is sent from ClockManager to WorkerClock when the global minimum clock among all workers is changed.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "BroadcastMinClockMsg",
  "fields":
  [
    {"name": "globalMinClock", "type": "int"}
  ]
},

/**
 * This message is sent from WorkerClock to ClockManager to request initial worker clock and current global minimum clock.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "RequestInitClockMsg",
  "fields": []
},

/**
 * A message to reply RequestInitClockMsg.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "ReplyInitClockMsg",
  "fields":
  [
    {"name": "initClock", "type": "int"},
    {"name": "globalMinClock", "type": "int"}
  ]
},

/**
 * This message is sent from WorkerClock to ClockManager to notify the worker clock is ticked.
 */
{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "TickMsg",
  "fields": []
},

{
  "namespace": "edu.snu.cay.services.ps.avro",
  "type": "record",
  "name": "AvroClockMsg",
  "fields":
  [
    {"name": "type",
     "type":
       {"type": "enum",
        "name": "ClockMsgType",
        "symbols": ["BroadcastMinClockMsg", "RequestInitClock", "ReplyInitClock", "Tick"]}},
    {"name": "broadcastMinClockMsg", "type": ["null", "BroadcastMinClockMsg"], "default": null},
    {"name": "requestInitClockMsg", "type": ["null", "RequestInitClockMsg"], "default": null},
    {"name": "replyInitClockMsg", "type": ["null", "ReplyInitClockMsg"], "default": null},
    {"name": "tickMsg", "type": ["null", "TickMsg"], "default": null}
  ]
}

]
