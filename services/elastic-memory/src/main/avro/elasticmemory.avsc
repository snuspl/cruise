/*
 * Copyright (C) 2015 Seoul National University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
[
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "DataKey",
  "fields":
  [
    {"name": "key", "type": "bytes"}
  ]
},

{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "DataValue",
  "fields":
  [
    {"name": "value", "type": "bytes"}
  ]
},

/**
 * A pair of a single data key and its value.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "KeyValuePair",
  "fields":
  [
    {"name": "key", "type": "bytes"},
    {"name": "value", "type": "bytes"}
  ]
},

/**
 * Avro version of data key range.
 * Represents a range of data keys using the min and max values.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "KeyRange",
  "fields":
  [
    {"name": "min", "type": "bytes"},
    {"name": "max", "type": "bytes"}
  ]
},

/**
 * An avro message format for sending a data operation to remote evaluator.
 * A type of {@code dataKeys} and {@code dataValues} is a union that can be used to
 * represent operations both of a single key or range keys.
 * {@code dataValues} is used only for PUT operations.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "RemoteOpMsg",
  "fields":
  [
    {"name": "origEvalId", "type": "string"},
    {"name": "opType", "type": {"type": "enum", "name": "DataOpType", "symbols": ["PUT", "GET", "REMOVE"]}},
    {"name": "dataKeys", "type": ["DataKey", {"type": "array", "items": "KeyRange"}]},
    {"name": "dataValues", "type": ["null", "DataValue", {"type": "array", "items": "KeyValuePair"}]}
  ]
},

/**
 * An avro message format for sending a result of data operation to the source evaluator.
 * A type of {@code dataValues} is a union that can be used to
 * represent operations both of a single key or range keys.
 * {@code dataValue} is used only for GET and REMOVE operations.
 * {@code failedKeyRanges} is used only for range key operation.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "RemoteOpResultMsg",
  "fields":
  [
    {"name": "isSuccess", "type": "boolean"},
    {"name": "dataValues", "type": ["null", "DataValue", {"type": "array", "items": "KeyValuePair"}]},
    {"name": "failedKeyRanges", "type": ["null", {"type": "array", "items": "KeyRange"}], "default": null}
  ]
},

/**
 * An avro message format for evaluators to request a initial routing table to driver.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "RoutingTableInitReqMsg",
  "fields":
  [
  ]
},

/**
 * An avro message format for driver to send a initial routing table to evaluators.
 * {@code blockLocations} is a list whose index is the block id and value is the store id.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "RoutingTableInitMsg",
  "fields":
  [
    {"name": "blockLocations", "type": {"type": "array", "items": "int"}}
  ]
},

/**
 * An avro message format for driver to broadcast the result of migration to evaluators.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "RoutingTableUpdateMsg",
  "fields":
  [
      {"name": "blockIds", "type": {"type": "array", "items": "int"}},
      {"name": "oldEvalId", "type": "string"},
      {"name": "newEvalId", "type": "string"}
  ]
},

/**
 * Control message that is sent from the driver to evaluators.
 * The message contains the data type and an array of block ids to send.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "CtrlMsg",
  "fields":
  [
    {"name": "blockIds", "type": {"type": "array", "items": "int"}}
  ]
},

/**
 * Data message that evaluators send to one another.
 * Actual data is all packed in these messages during data migration,
 * including its data type and identifiers.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "DataMsg",
  "fields":
  [
    {"name": "blockId", "type": ["null", "int"], "default": null},
    {"name": "keyValuePairs", "type": ["null", {"type": "array", "items": "KeyValuePair"}], "default": null}
  ]
},

/**
 * Request message to update ownership of the block.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "OwnershipMsg",
  "fields": [
      {"name": "blockId", "type": "int"},
      {"name": "oldOwnerId", "type": "int"},
      {"name": "newOwnerId", "type": "int"}
  ]
},

/**
 * Response message to update ownership of the block.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "OwnershipAckMsg",
  "fields": [
      {"name": "blockId", "type": "int"}
  ]
},

/**
 * Message to notify failures in Evaluators to the Driver.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "FailureMsg",
  "fields":
  [
    { "name": "operationId", "type": "string" },
    { "name": "reason", "type": "string" }
  ]
},

/**
 * Message to notify the result of the migration via callback.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "ResultMsg",
  "fields":
  [
    {"name": "result", "type": {"type": "enum", "name": "Result", "symbols": ["SUCCESS", "FAILURE"]}},
    {"name": "blockIds", "type": ["null", {"type": "array", "items": "int"}], "default": null},
    {"name": "msg", "type": ["null", "string"], "default": null}
  ]
},

/**
 * The message protocol used by Network Service for Elastic Memory.
 * CtrlMsg, DataMsg, etc. are all included as nullable fields, and
 * an enum type indicates which field is not null.
 */
{
  "namespace": "edu.snu.cay.services.em.avro",
  "type": "record",
  "name": "AvroElasticMemoryMessage",
  "fields":
  [
    {"name": "type", "type": {"type": "enum", "name": "Type",
        "symbols": ["RemoteOpMsg", "RemoteOpResultMsg", "RoutingTableInitReqMsg", "RoutingTableInitMsg",
         "RoutingTableUpdateMsg", "CtrlMsg", "DataMsg",
         "FailureMsg", "ResultMsg", "OwnershipMsg", "OwnershipAckMsg"]}},
    {"name": "srcId", "type" : "string"},
    {"name": "destId", "type" : "string"},
    {"name": "operationId", "type" : ["null", "string"], "default": null},
    {"name": "traceInfo", "type": ["null", "edu.snu.cay.utils.trace.AvroTraceInfo"], "default": null},
    {"name": "remoteOpMsg", "type": ["null", "RemoteOpMsg"], "default": null},
    {"name": "remoteOpResultMsg", "type": ["null", "RemoteOpResultMsg"], "default": null},
    {"name": "routingTableInitReqMsg", "type": ["null", "RoutingTableInitReqMsg"], "default": null},
    {"name": "routingTableInitMsg", "type": ["null", "RoutingTableInitMsg"], "default": null},
    {"name": "routingTableUpdateMsg", "type": ["null", "RoutingTableUpdateMsg"], "default": null},
    {"name": "ctrlMsg", "type": ["null", "CtrlMsg"], "default": null},
    {"name": "dataMsg", "type": ["null", "DataMsg"], "default": null},
    {"name": "failureMsg", "type": ["null", "FailureMsg"], "default":null},
    {"name": "resultMsg", "type": ["null", "ResultMsg"], "default": null},
    {"name": "ownershipMsg", "type": ["null", "OwnershipMsg"], "default": null},
    {"name": "ownershipAckMsg", "type": ["null", "OwnershipAckMsg"], "default": null}
  ]
}
]
