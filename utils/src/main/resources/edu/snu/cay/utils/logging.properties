# Copyright (C) 2016 Seoul National University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Properties file which configures the operation of the JDK
# logging facility.
# Heavily borrowed from REEF's logging.properties, and depends on REEF's ThreadLogFormatter.
# For Cay developers, changing this configuration within Cay is much easier than changing REEF's configuration.

# This config file should be redirected via the LoggingConfig class,
# to ensure that it affects logs in all processes, even on different containers and hosts.
# >java -Djava.util.logging.config.class=edu.snu.cay.utils.LoggingConfig

# Make sure the updated logging.properties is available in the java classpath
# (it might need to packaged into a jar)

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
# handlers=java.utils.logging.FileHandler, java.utils.logging.ConsoleHandler
handlers=java.util.logging.ConsoleHandler

# java.util.logging.SimpleFormatter.format=%1$tF %1$tT,%1$tL %4$s %2$s - %5$s%6$s%n

org.apache.reef.util.logging.ThreadLogFormatter.format=%1$tF %1$tT,%1$tL %4$s %2$s %7$s | %5$s%6$s%n
org.apache.reef.util.logging.ThreadLogFormatter.dropPrefix=org.apache.,edu.snu.

# Default global logging level.
# Loggers and Handlers may override this level
# Change to ALL for debugging
.level=INFO

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.

# org.apache.reef.examples.level=FINEST
# org.apache.reef.tang.level=INFO

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=org.apache.reef.util.logging.ThreadLogFormatter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level=INFO

# Naming style for the output file:
# (The output file is placed in the directory
# defined by the "user.home" System property.)
java.util.logging.FileHandler.pattern=%h/reef.%u.log

# Limiting size of output file in bytes:
java.util.logging.FileHandler.limit=512000

# Number of output files to cycle through, by appending an
# integer to the base file name:
java.util.logging.FileHandler.count=100

# Style of output (Simple or XML):
java.util.logging.FileHandler.formatter=org.apache.reef.util.logging.ThreadLogFormatter
