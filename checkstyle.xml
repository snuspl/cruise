<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--
  Copyright (C) 2015 Seoul National University

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--

  This configuration is based on the one for Hadoop that is based on the
  sun_checks.xml file that is bundled with Checkstyle and includes checks
  for:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
  <!-- Checks that each Java package has a Javadoc file, package-info.java, used for commenting. -->
  <!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocPackage -->
  <module name="JavadocPackage"/>

  <!-- Checks whether files end with a new line. -->
  <!-- See http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile"/>

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation">
    <property name="severity" value="warning"/>
  </module>

  <module name="FileLength">
    <property name="severity" value="warning"/>
  </module>
  <module name="FileTabCharacter">
    <property name="severity" value="warning"/>
  </module>

  <!-- not a check -->
  <!--<module name="SuppressWarningsFilter">-->
    <!--<property name="severity" value="warning"/>-->
  <!--</module>-->

  <module name="TreeWalker">
    <!-- not a check -->
    <!--<module name="SuppressWarningsHolder">-->
      <!--<property name="severity" value="warning"/>-->
    <!--</module>-->

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocType">
      <property name="severity" value="warning"/>
      <property name="scope" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
    </module>
    <module name="JavadocStyle">
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName">
      <property name="severity" value="warning"/>
    </module>
    <module name="LocalVariableName">
      <property name="severity" value="warning"/>
    </module>
    <module name="MemberName">
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodName">
      <property name="severity" value="warning"/>
    </module>
    <module name="PackageName">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParameterName">
      <property name="severity" value="warning"/>
    </module>
    <module name="StaticVariableName">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypeName">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header">                            -->
    <!-- The follow property value demonstrates the ability     -->
    <!-- to have access to ANT properties. In this case it uses -->
    <!-- the ${basedir} property to allow Checkstyle to be run  -->
    <!-- from any directory within a project. See property      -->
    <!-- expansion,                                             -->
    <!-- http://checkstyle.sf.net/config.html#properties        -->
    <!-- <property                                              -->
    <!--     name="headerFile"                                  -->
    <!--     value="${basedir}/java.header"/>                   -->
    <!-- </module> -->

    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module name="RegexpHeader"/>                                -->


    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="IllegalImport">
      <property name="severity" value="warning"/>
    </module>
    <!-- defaults to sun.* packages -->
    <module name="RedundantImport">
      <property name="severity" value="warning"/>
    </module>
    <module name="UnusedImports">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength">
      <property name="severity" value="warning"/>
      <property name="ignorePattern" value="^import"/>
      <property name="max" value="120"/>
    </module>
    <module name="MethodLength">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParameterNumber">
      <property name="max" value="7"/>
      <property name="tokens" value="METHOD_DEF"/>
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodParamPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="NoWhitespaceAfter">
      <property name="severity" value="warning"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypecastParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="WhitespaceAfter">
      <property name="severity" value="warning"/>
      <property name="tokens" value="COMMA, SEMI"/>
    </module>


    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder">
      <property name="severity" value="warning"/>
    </module>
    <module name="RedundantModifier">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks">
      <property name="severity" value="warning"/>
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="severity" value="warning"/>
      <property name="option" value="text"/>
    </module>
    <module name="LeftCurly">
      <property name="severity" value="warning"/>
    </module>
    <module name="NeedBraces">
      <property name="severity" value="warning"/>
    </module>
    <module name="RightCurly">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <!-- module name="AvoidInlineConditionals"/-->
    <module name="EmptyStatement">
      <property name="severity" value="warning"/>
    </module>
    <module name="EqualsHashCode">
      <property name="severity" value="warning"/>
    </module>
    <module name="HiddenField">
      <property name="severity" value="warning"/>
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>
      <property name="setterCanReturnItsClass" value="true"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="severity" value="warning"/>
    </module>
    <module name="InnerAssignment">
      <property name="severity" value="warning"/>
    </module>
    <module name="MissingSwitchDefault">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanExpression">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanReturn">
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks that local variables and method parameters that never have their values changed are declared final. -->
    <!-- See http://checkstyle.sourceforge.net/config_coding.html#FinalLocalVariable -->
    <!-- This check fails to detect all violations. -->
    <!-- IntelliJ inspections were used to identify and fix undetected violations. -->
    <module name="FinalLocalVariable">
      <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF"/>
      <property name="validateEnhancedForLoopVariable" value="true"/>
    </module>

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="FinalClass">
      <property name="severity" value="warning"/>
    </module>
    <module name="HideUtilityClassConstructor">
      <property name="severity" value="warning"/>
    </module>
    <module name="InterfaceIsType">
      <property name="severity" value="warning"/>
    </module>
    <module name="VisibilityModifier">
      <property name="severity" value="warning"/>
    </module>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle">
      <property name="severity" value="warning"/>
    </module>
    <module name="Indentation">
      <property name="severity" value="warning"/>
      <property name="basicOffset" value="2"/>
      <property name="caseIndent" value="0"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="TODO[^\[][^J][^I][^R][^A]"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="info"/>
      <property name="format" value="TODO\[JIRA"/>
    </module>
    <module name="UpperEll">
      <property name="severity" value="warning"/>
    </module>
  </module>

</module>
